{"version":3,"file":"static/js/764.335472dd.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/components/Button/Button.module.css?ce6f","components/Button/Button.js","webpack://react-homework-template/./src/components/MovieItem/MovieItem.module.css?431a","components/MovieItem/MovieItem.js","pages/Movies.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js","services/api-service.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"box\":\"Button_box__qrBQi\"};","import PropTypes from 'prop-types';\n\nimport css from './Button.module.css';\n\nconst Button = ({ children, onClick }) => {\n  return (\n    <div className={ css.box } onClick={ onClick }>\n      { children }\n    </div>\n  );\n};\n\nButton.propTypes = {\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  onClick: PropTypes.func,\n};\n\nexport default Button;\n","// extracted by mini-css-extract-plugin\nexport default {\"box\":\"MovieItem_box__xoqOx\",\"poster\":\"MovieItem_poster__2QxTy\",\"info\":\"MovieItem_info__1V8JC\",\"title\":\"MovieItem_title__JQYXo\",\"rating\":\"MovieItem_rating__FVA0T\"};","import { Link } from 'react-router-dom';\nimport PropTypes from 'prop-types';\n\nimport css from \"./MovieItem.module.css\";\n\nconst MovieItem = ({ data: { movieId, poster_path, title, vote_average }, state }) => {\n\n  return (\n    <Link to={ `/movies/${ movieId }` } state={ state } className={ css.box }>\n      <div className={ css.poster }>\n        <img src={ poster_path } alt={ title } />\n      </div>\n      <div className={ css.info }>\n        <span className={ css.rating }>{ vote_average }</span>\n        <h3 className={ css.title }>{ title }</h3>\n      </div>\n    </Link>\n  );\n};\n\nMovieItem.propTypes = {\n  data: PropTypes.object,\n  state: PropTypes.object,\n};\n\nexport default MovieItem;\n","import { useEffect, useState } from 'react';\nimport { useLocation, useSearchParams } from 'react-router-dom';\nimport { apiService } from '../services/api-service';\nimport MovieItem from '../components/MovieItem';\nimport Loader from '../components/Loader';\nimport Button from '../components/Button';\nimport Error from '../components/Error';\n\nconst Movies = () => {\n\n  const [searchParams] = useSearchParams();\n  const querySearch = searchParams.get('search');\n\n  const [activePage, setActivePage] = useState(1);\n  const [listResults, setListResults] = useState([]);\n  const [totalResults, setTotalResults] = useState(0);\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  const location = useLocation();\n\n  useEffect(() => {\n    setIsLoading(true);\n    apiService.searchMovies(querySearch, activePage)\n      .then(({ results, total_results }) => {\n        setTotalResults(total_results);\n        setListResults(state => {\n          return [...state, ...results];\n        });\n      })\n      .catch(err => {\n        setError(err);\n      })\n      .finally(() => {\n        setIsLoading(false);\n      });\n  }, [activePage, querySearch]);\n\n  const handleLoadMore = () => setActivePage(state => state + 1);\n\n  const listMovies = listResults.map(movie => {\n    return <MovieItem key={ movie.movieId } data={ movie } state={{ from: location }} />\n  });\n\n  return (\n    <>\n      { isLoading && <Loader /> }\n      <h1>Searched by \"{ querySearch }\"</h1>\n      <div className='listMovies'>\n        { error ? <Error>I'm sorry. I don't have movies \"{ querySearch }\"</Error> : listMovies }\n      </div>\n      {\n        (!error && listResults.length > 0 && listResults.length < totalResults)\n        && <Button onClick={ handleLoadMore }>Load more</Button>\n      }\n    </>\n  );\n};\n\nexport default Movies;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _classPrivateFieldBase(receiver, privateKey) {\n  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n    throw new TypeError(\"attempted to use private field on non-instance\");\n  }\n\n  return receiver;\n}","var id = 0;\nexport default function _classPrivateFieldKey(name) {\n  return \"__private_\" + id++ + \"_\" + name;\n}","const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY_API = '221af12348c3ca060963c8b12f5995d3';\n\n\nconst formatDate = (dateString) => {\n  const months = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ];\n\n  const date = new Date(dateString);\n\n  return `${months[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`;\n};\n\nclass ApiService {\n  getResource = async (url) => {\n    const res = await fetch(`${BASE_URL}${url}api_key=${KEY_API}`);\n    return res.json();\n  }\n\n  getTrending = async (page=1) => {\n    const res = await this.getResource(`/trending/movie/day?page=${page}&`);\n    return this.#transformTrending(res);\n  }\n\n  #transformTrending({ results, total_results }) {\n    const transformedResults = results.map(({ id, title, poster_path, vote_average }) => ({\n      movieId: id,\n      title,\n      poster_path: poster_path ? 'https://image.tmdb.org/t/p/w500' + poster_path : '/goit-react-hw-05-movies/img/noimage.jpg',\n      vote_average: vote_average.toFixed(2),\n    }));\n\n    return {\n      results: transformedResults,\n      total_results\n    };\n  }\n\n  searchMovies = async (query, page=1) => {\n    const res = await this.getResource(`/search/movie?query=${query}&page=${page}&`);\n    return this.#transformTrending(res);\n  };\n\n  getMovieDetails = async (movieId) => {\n    const res = await this.getResource(`/movie/${movieId}?`);\n    return this.#transformMovieDetails(res);\n  };\n\n  #transformMovieDetails({\n    genres,\n    overview,\n    poster_path,\n    production_companies,\n    production_countries,\n    release_date,\n    title,\n    vote_average\n  }) {\n    return {\n      genres: genres.map(({name}) => name),\n      overview,\n      poster_path: poster_path ? 'https://image.tmdb.org/t/p/w500' + poster_path : 'goit-react-hw-05-movies/img/noimage.jpg',\n      production_companies: production_companies.map(({name}) => name),\n      production_countries: production_countries.map(({name}) => name),\n      release_date: formatDate(release_date),\n      title,\n      vote_average: vote_average.toFixed(2),\n    };\n  }\n\n  getMovieCredits = async (movieId) => {\n    const res = await this.getResource(`/movie/${movieId}/credits?`);\n    return this.#transformCredits(res);\n  }\n\n  #transformCredits({ cast }) {\n    return cast.map(({ character, name, profile_path, id }) => ({\n      id,\n      character,\n      name,\n      profile_path: profile_path\n        ? 'https://image.tmdb.org/t/p/w500' + profile_path\n        : '/goit-react-hw-05-movies/img/noimage.jpg',\n    }));\n  }\n\n  getMovieReviews = async (movieId, page=1) => {\n    const res = await this.getResource(`/movie/${movieId}/reviews?page=${page}&`);\n    return this.#transformMovieReviews(res);\n  }\n\n  #transformMovieReviews({ results }) {\n    return results.map(({ author, author_details: { avatar_path }, content, created_at, updated_at, url, id }) => {\n\n      const avatar = avatar_path\n        ? avatar_path.includes('http')\n          ? avatar_path.slice(1)\n          : 'https://image.tmdb.org/t/p/w500' + avatar_path\n        : '/goit-react-hw-05-movies/img/noimage.jpg';\n\n      return {\n        author,\n        avatar_path: avatar,\n        content,\n        created_at: formatDate(created_at),\n        updated_at: formatDate(updated_at),\n        url,\n        id\n      };\n    });\n  }\n}\n\nexport const apiService = new ApiService();\n"],"names":["children","onClick","className","css","data","movieId","poster_path","title","vote_average","state","to","src","alt","useSearchParams","querySearch","get","useState","activePage","setActivePage","listResults","setListResults","totalResults","setTotalResults","isLoading","setIsLoading","error","setError","location","useLocation","useEffect","apiService","then","results","total_results","catch","err","finally","listMovies","map","movie","from","length","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined","_classPrivateFieldBase","receiver","privateKey","Object","prototype","hasOwnProperty","call","TypeError","id","_classPrivateFieldKey","name","formatDate","dateString","date","Date","getMonth","getDate","getFullYear","ApiService","getResource","url","fetch","res","json","getTrending","page","searchMovies","query","getMovieDetails","getMovieCredits","getMovieReviews","transformedResults","toFixed","genres","overview","production_companies","production_countries","release_date","cast","character","profile_path","author","avatar_path","author_details","content","created_at","updated_at","includes","slice"],"sourceRoot":""}