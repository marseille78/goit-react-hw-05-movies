{"version":3,"file":"static/js/186.2bd7a295.chunk.js","mappings":"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","sources":["webpack://react-homework-template/./src/pages/movie-details.module.css?ef77","pages/movie-details.js","../node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseBase.js","../node_modules/@babel/runtime/helpers/esm/classPrivateFieldLooseKey.js","services/api-service.js"],"sourcesContent":["// extracted by mini-css-extract-plugin\nexport default {\"box\":\"movie-details_box__ZcPX1\",\"view\":\"movie-details_view__MFNf1\",\"desc\":\"movie-details_desc__Rs4g3\",\"details\":\"movie-details_details__ZYCuv\",\"dataList\":\"movie-details_dataList__MWwC5\"};","import { useEffect, useState, Suspense } from 'react';\nimport { apiService } from '../services/api-service';\nimport { Link, Outlet, useParams } from 'react-router-dom';\nimport Loader from '../components/loader';\n\nimport css from './movie-details.module.css';\n\nconst MovieDetails = () => {\n\n  const { movieId } = useParams();\n\n  const [genres, setGenres] = useState([]);\n  const [title, setTitle] = useState('');\n  const [overview, setOverview] = useState('');\n  const [posterPath, setPosterPath] = useState('');\n  const [productionCompanies, setProductionCompanies] = useState([]);\n  const [productionCountries, setProductionCountries] = useState([]);\n  const [releaseDate, setReleaseDate] = useState('');\n  const [voteAverage, setVoteAverage] = useState('');\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(null);\n\n  useEffect(() => {\n    setIsLoading(true);\n    apiService.getMovieDetails(movieId)\n      .then(({\n        genres,\n        vote_average,\n        release_date,\n        production_countries,\n        production_companies,\n        poster_path,\n        overview,\n        title\n      }) => {\n        setGenres(genres);\n        setVoteAverage(vote_average);\n        setReleaseDate(release_date);\n        setProductionCountries(production_countries);\n        setProductionCompanies(production_companies);\n        setPosterPath(poster_path);\n        setOverview(overview);\n        setTitle(title);\n    })\n    .catch(err => {\n      clearState();\n      setError(err);\n    })\n    .finally(() => {\n      setIsLoading(false);\n    });\n  }, [movieId]);\n\n  const clearState = () => {\n    setGenres([]);\n    setTitle('');\n    setOverview('');\n    setPosterPath('');\n    setProductionCompanies([]);\n    setProductionCountries([]);\n    setReleaseDate('');\n    setVoteAverage('');\n  };\n\n  const loader = isLoading && <Loader/>\n  const content = error\n    ? <h2>{ error.message }</h2>\n    : (\n      <>\n        <div className={ css.box }>\n          <div className={ css.view }>\n            <img src={ posterPath } alt={ title } />\n          </div>\n          <div className=\"data\">\n            <h1>{ title }<span>{ voteAverage }</span></h1>\n            <p className={ css.desc }>{ overview }</p>\n            <ul className={ css.dataList }>\n              <li><strong>Genres</strong>: { genres.join(', ') }</li>\n              <li><strong>Companies</strong>: { productionCompanies.join(', ') }</li>\n              <li><strong>Countries</strong>: { productionCountries.join(', ') }</li>\n              <li><strong>Release</strong>: { releaseDate }</li>\n            </ul>\n            <hr/>\n            <ul className={ css.details }>\n              <li><Link to={ `/movies/${movieId}/cast?id=${movieId}` }>Actors</Link></li>\n              <li><Link to={ `/movies/${movieId}/reviews?id=${movieId}` }>Reviews</Link></li>\n            </ul>\n            <Suspense fallback={ <Loader /> }>\n              <Outlet />\n            </Suspense>\n          </div>\n        </div>\n      </>\n    );\n\n  return (\n    <>\n      { loader }\n      <div>\n        { content }\n      </div>\n    </>\n  );\n};\n\nexport default MovieDetails;\n","function asyncGeneratorStep(gen, resolve, reject, _next, _throw, key, arg) {\n  try {\n    var info = gen[key](arg);\n    var value = info.value;\n  } catch (error) {\n    reject(error);\n    return;\n  }\n\n  if (info.done) {\n    resolve(value);\n  } else {\n    Promise.resolve(value).then(_next, _throw);\n  }\n}\n\nexport default function _asyncToGenerator(fn) {\n  return function () {\n    var self = this,\n        args = arguments;\n    return new Promise(function (resolve, reject) {\n      var gen = fn.apply(self, args);\n\n      function _next(value) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"next\", value);\n      }\n\n      function _throw(err) {\n        asyncGeneratorStep(gen, resolve, reject, _next, _throw, \"throw\", err);\n      }\n\n      _next(undefined);\n    });\n  };\n}","export default function _classPrivateFieldBase(receiver, privateKey) {\n  if (!Object.prototype.hasOwnProperty.call(receiver, privateKey)) {\n    throw new TypeError(\"attempted to use private field on non-instance\");\n  }\n\n  return receiver;\n}","var id = 0;\nexport default function _classPrivateFieldKey(name) {\n  return \"__private_\" + id++ + \"_\" + name;\n}","const BASE_URL = 'https://api.themoviedb.org/3';\nconst KEY_API = '221af12348c3ca060963c8b12f5995d3';\n\n\nconst formatDate = (dateString) => {\n  const months = [\n    'Jan',\n    'Feb',\n    'Mar',\n    'Apr',\n    'May',\n    'Jun',\n    'Jul',\n    'Aug',\n    'Sep',\n    'Oct',\n    'Nov',\n    'Dec',\n  ];\n\n  const date = new Date(dateString);\n\n  return `${months[date.getMonth()]} ${date.getDate()}, ${date.getFullYear()}`;\n};\n\nclass ApiService {\n  getResource = async (url) => {\n    const res = await fetch(`${BASE_URL}${url}api_key=${KEY_API}`);\n    return res.json();\n  }\n\n  getTrending = async (page=1) => {\n    const res = await this.getResource(`/trending/movie/day?page=${page}&`);\n    return this.#transformTrending(res);\n  }\n\n  #transformTrending({ results, total_results }) {\n    const transformedResults = results.map(({ id, title, poster_path, vote_average }) => ({\n      movieId: id,\n      title,\n      poster_path: poster_path ? 'https://image.tmdb.org/t/p/w500' + poster_path : '/goit-react-hw-05-movies/img/noimage.jpg',\n      vote_average: vote_average.toFixed(2),\n    }));\n\n    return {\n      results: transformedResults,\n      total_results\n    };\n  }\n\n  searchMovies = async (query, page=1) => {\n    const res = await this.getResource(`/search/movie?query=${query}&page=${page}&`);\n    return this.#transformTrending(res);\n  };\n\n  getMovieDetails = async (movieId) => {\n    const res = await this.getResource(`/movie/${movieId}?`);\n    return this.#transformMovieDetails(res);\n  };\n\n  #transformMovieDetails({\n    genres,\n    overview,\n    poster_path,\n    production_companies,\n    production_countries,\n    release_date,\n    title,\n    vote_average\n  }) {\n    return {\n      genres: genres.map(({name}) => name),\n      overview,\n      poster_path: poster_path ? 'https://image.tmdb.org/t/p/w500' + poster_path : 'goit-react-hw-05-movies/img/noimage.jpg',\n      production_companies: production_companies.map(({name}) => name),\n      production_countries: production_countries.map(({name}) => name),\n      release_date: formatDate(release_date),\n      title,\n      vote_average: vote_average.toFixed(2),\n    };\n  }\n\n  getMovieCredits = async (movieId) => {\n    const res = await this.getResource(`/movie/${movieId}/credits?`);\n    return this.#transformCredits(res);\n  }\n\n  #transformCredits({ cast }) {\n    return cast.map(({ character, name, profile_path, id }) => ({\n      id,\n      character,\n      name,\n      profile_path: profile_path\n        ? 'https://image.tmdb.org/t/p/w500' + profile_path\n        : '/goit-react-hw-05-movies/img/noimage.jpg',\n    }));\n  }\n\n  getMovieReviews = async (movieId, page=1) => {\n    const res = await this.getResource(`/movie/${movieId}/reviews?page=${page}&`);\n    return this.#transformMovieReviews(res);\n  }\n\n  #transformMovieReviews({ results }) {\n    return results.map(({ author, author_details: { avatar_path }, content, created_at, updated_at, url, id }) => {\n\n      const avatar = avatar_path\n        ? avatar_path.includes('http')\n          ? avatar_path.slice(1)\n          : 'https://image.tmdb.org/t/p/w500' + avatar_path\n        : '/goit-react-hw-05-movies/img/noimage.jpg';\n\n      return {\n        author,\n        avatar_path: avatar,\n        content,\n        created_at: formatDate(created_at),\n        updated_at: formatDate(updated_at),\n        url,\n        id\n      };\n    });\n  }\n}\n\nexport const apiService = new ApiService();\n"],"names":["movieId","useParams","useState","genres","setGenres","title","setTitle","overview","setOverview","posterPath","setPosterPath","productionCompanies","setProductionCompanies","productionCountries","setProductionCountries","releaseDate","setReleaseDate","voteAverage","setVoteAverage","isLoading","setIsLoading","error","setError","useEffect","apiService","then","vote_average","release_date","production_countries","production_companies","poster_path","catch","err","clearState","finally","loader","content","message","className","css","src","alt","join","to","Suspense","fallback","asyncGeneratorStep","gen","resolve","reject","_next","_throw","key","arg","info","value","done","Promise","_asyncToGenerator","fn","self","this","args","arguments","apply","undefined","_classPrivateFieldBase","receiver","privateKey","Object","prototype","hasOwnProperty","call","TypeError","id","_classPrivateFieldKey","name","formatDate","dateString","date","Date","getMonth","getDate","getFullYear","ApiService","getResource","url","fetch","res","json","getTrending","page","searchMovies","query","getMovieDetails","getMovieCredits","getMovieReviews","results","total_results","transformedResults","map","toFixed","cast","character","profile_path","author","avatar_path","author_details","created_at","updated_at","includes","slice"],"sourceRoot":""}